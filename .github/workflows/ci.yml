name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  notification:
    name: NotificaciÃ³nTelegram
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Notify to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.NOTIFY_CHAT }}
          token: ${{ secrets.NOTIFY_SIGNKEY }}
          message: |
            ${{ github.actor }} hizo un push a master/main:
            Mensaje: 
            ${{ github.event.commits[0].message }}
            _______________________________________
            Repositorio: ${{ github.repository }}
    
  code-risk-analyzer:
    needs: [notification] 
    # Name the Job
    name: Code Risk Analyzer
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Code Risk Analyzer
        uses: Fizz-Q/code-risk-analyzer@v1.23
        with:
          # ${{ github.repository }}
          repository: ${{ github.repository }}
          # ${{ github.repository_owner }}
          user: ${{ github.repository_owner }}
          # ${{ secrets.GITHUB_TOKEN }}
          github_token: ${{ secrets.GTB_TOKEN }}
          #github_token: ${{ secrets.GITHUB_TOKEN }}

  runPHPCSInspection:
    name: Run PHPCS inspection
    needs: [code-risk-analyzer] 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Run PHPCS inspection
      uses: rtCamp/action-phpcs-code-review@v2
      env:
        # GH_BOT_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        GH_BOT_TOKEN: ${{ secrets.GTB_TOKEN }}
        SKIP_FOLDERS: "tests,.github"
        PHPCS_SNIFFS_EXCLUDE: "WordPress.Files.FileName"
      with:
        args: "WordPress,WordPress-Core,WordPress-Docs" 

  deploy:
    needs: [runPHPCSInspection] 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Install docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: set lower case repo name
        run: |
          echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: '${{ github.event.repository.name }}'

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags:  ${{ secrets.DOCKER_USERNAME }}/${{env.REPO_LC}}:${{ github.sha }},${{ secrets.DOCKER_USERNAME }}/${{env.REPO_LC}}:latest

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
          short-description: ${{ github.event.repository.description }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}